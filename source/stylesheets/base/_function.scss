// Functions & Mixins
// ----------------------------------------------
// From the Foundation framework https://github.com/zurb/foundation
// ----------------------------------------------

// Strip Unit
// It strips the unit of measure and returns it
// ----------------------------------------------
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Convert to REM
// ----------------------------------------------
@function convert-to-rem($value, $base-value: $base-font) {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

// REM calc
// ----------------------------------------------
@function rem-calc($values, $base-value: $base-font) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

// MIXINS
// ----------------------------------------------
// Reset list
// ----------------------------------------------
@mixin reset-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin Opacity($value){
  $IEValue: $value*100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

// Retina background image
// ----------------------------------------------
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}
