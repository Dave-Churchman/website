// Buttons
// ----------------------------------------------

/*doc
---
title: Button
name: Button
category: Module
---

Button styles can be applied to any element. Typically you'll want to
use either a `<button>` or an `<a>` element:

```html_example
<button class="button">Simple button</button>
<a class="button" href="http://wearecube.ch">Link with .button class</a>
<a class="button is-primary">Primary button</a>
<a class="button is-disabled">Disabled button</a>
```

Three sizes for the buttons: small, medium (default) and big.

```html_example
<a class="button is-small">Small</a>
<a class="button">Medium</a>
<a class="button is-big">Big</a>
```
*/
.appuio-contact-button {
  display: block;
  position: relative;
  margin: 0 auto;
  clear: both;
  @include susy-breakpoint($break-small) {
    margin-top: rem-calc(12);
  }
  @include susy-breakpoint($break-medium) {
    @include span(6 last of 12);
    @include squish(3, 3);
  }
  .button {
    @include susy-breakpoint($break-medium) {
      padding-left: rem-calc(48);
      padding-right: rem-calc(48);
    }
  }
}

.button,
button.button,
a.button {
  display: inline-block;
  padding: rem-calc(8 22);
  background: #FFD301;
  border: 4px solid #FFD301;
  color: #002F47;
  font-size: rem-calc(14);
  line-height: rem-calc(24);
  //white-space: nowrap;
  white-space: normal;
  vertical-align: middle;
  text-decoration: none;
  text-transform: uppercase;
  cursor: pointer;
  user-select: none;
  transition: all 300ms ease-in-out;
  -webkit-appearance: none;
  margin-top: none;

  &.is-flex {
    flex: 1 100%;
  }
  &.is-round {
    border-radius: rem-calc(24);
  }
  &:focus,
  &:focus:hover,
  &:hover,
  &:active {
    color: #002F47;
    background-color: #fff;
  }
  &.is-small {
    padding: rem-calc(3 6);
    font-size: rem-calc(12);
  }
  &.is-big {
    padding: rem-calc(11 24);
    font-size: rem-calc(18);
  }
  &:disabled,
  &.is-disabled {
    color: #aaa;
    background-color: #ddd;
    cursor: not-allowed;
  }
}
.button-progress > input {
  width: 100%;
}
.button-progress.is-loading {
  position: relative;
  border-radius: rem-calc(24);
  overflow: hidden;
  &::after {
    box-sizing: border-box;
    display: block;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
    background: #FFEC93;
    border: 4px solid #FFD301;
    border-radius: rem-calc(24);
    animation: pulse 2s 1;
    transition: background-color 250ms ease;
  }
  &.is-check::after {
    background-color: $color-success;
    border: 4px solid darken($color-success, 6%);
    border-radius: rem-calc(24);
    width: 100%;
  }
  &.is-exclamation::after {
    background-color: #FFAC32;
    border: 4px solid darken(#FFAC32, 6%);
    border-radius: rem-calc(24);
  }
  .button-progress-feedback {
    position: absolute;
    top: rem-calc(-1);
    left: 50%;
    z-index: 2;
    color: #002F47;
    font-size: rem-calc(14);
    line-height: rem-calc(24);
    transform: translate(-50%, 0) scale(1);
    animation: appear 300ms 1;
  }
}
@keyframes pulse {
  0% {
    width: 0;
  }
  70% {
    width: 60%;
  }
  100% {
    width: 100%;
  }
}
@keyframes appear {
  0% {
    transform: translate(-50%, 20%) scale(0);
  }
  50% {
    transform: translate(-50%, 0) scale(1.2);
  }
  100% {
    transform: translate(-50%, 0) scale(1);
  }
}

.button:disabled {
  border: 4px solid #e5eaed;
}
.home-feedback-container {
  position: relative;
  clear: both;
  display: flex;
  justify-content: center;
}
.home-feedback {
  position: absolute;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
}
